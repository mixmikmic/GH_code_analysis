import declarativewidgets as widgets

widgets.init()

get_ipython().run_cell_magic('html', '', '<link rel="import" href="/urth_components/iron-resizable-behavior/iron-resizable-behavior.html"\nis="urth-core-import" package="PolymerElements/iron-resizable-behavior">\n\n<dom-module id="resizable-element">\n    <style>\n        :host {\n            display: block;\n            background-color: goldenrod;\n            text-align: center;\n        }\n    </style>\n\n    <template>\n        <div style$="[[getStyle(h)]]">\n            <b>I\'m a resizable square with height <span>{{h}}</span>.</b>\n        </div>\n    </template>\n\n    <script>\n        HTMLImports.whenReady(function () {\n            Polymer({\n                is: \'resizable-element\',\n                \n                // 1. List the behaviors used by your widget here.\n                behaviors: [\n                    Polymer.IronResizableBehavior\n                ],\n                \n                properties: {\n                    h: {\n                        type: Number,\n                        value: 0\n                    }\n                },\n                \n                // 2. Add a listener for the \'iron-resize\' event\n                listeners: {\n                    \'iron-resize\': \'_onIronResize\'\n                },\n                \n                attached: function() {\n                    // invoke when added to DOM, so we can set initial dimensions\n                    this.async(this._onIronResize.bind(this), 100);\n                },\n                \n                // 3. Implement the callback which is invoked when your widget is resized\n                _onIronResize: function() {\n                    this.h = this.offsetWidth;\n                },\n                \n                getStyle: function() {\n                    return \'height: \' + this.h + \'px\';\n                }\n            });\n        });\n    </script>\n</dom-module>')

get_ipython().run_cell_magic('html', '', '<resizable-element></resizable-element>')

