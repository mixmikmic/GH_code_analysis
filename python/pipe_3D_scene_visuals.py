get_ipython().run_cell_magic('file', 'figs/paraview_view.py', "from paraview.simple import *\nparaview.simple._DisableFirstRenderCameraReset()\n\n# create a new 'Legacy VTK Reader'\nmeshvtk = LegacyVTKReader(FileNames=['figs/3d_mesh.vtk'])\n\n# get active view\nrenderView1 = GetActiveViewOrCreate('RenderView')\n# uncomment following to set a specific view size\n# renderView1.ViewSize = [660, 497]\n\n# get color transfer function/color map for 'valuesC'\nvaluesCLUT = GetColorTransferFunction('valuesC')\nvaluesCLUT.RGBPoints = [-0.010476154753522706, 0.231373, 0.298039, 0.752941, 0.012684543124250004, 0.865003, 0.865003, 0.865003, 0.035845241002022715, 0.705882, 0.0156863, 0.14902]\nvaluesCLUT.ScalarRangeInitialized = 1.0\n\n# show data in view\nmeshvtkDisplay = Show(meshvtk, renderView1)\n# trace defaults for the display properties.\nmeshvtkDisplay.ColorArrayName = ['POINTS', 'valuesC']\nmeshvtkDisplay.LookupTable = valuesCLUT\nmeshvtkDisplay.GlyphType = 'Arrow'\nmeshvtkDisplay.ScalarOpacityUnitDistance = 36.430215288341394\n\n# reset view to fit data\nrenderView1.ResetCamera()\n\n# show color bar/color legend\nmeshvtkDisplay.SetScalarBarVisibility(renderView1, True)\n\n# get opacity transfer function/opacity map for 'valuesC'\nvaluesCPWF = GetOpacityTransferFunction('valuesC')\nvaluesCPWF.Points = [-0.010476154753522706, 0.0, 0.5, 0.0, 0.035845241002022715, 1.0, 0.5, 0.0]\nvaluesCPWF.ScalarRangeInitialized = 1\n\n# set scalar coloring\nColorBy(meshvtkDisplay, ('CELLS', '_Marker'))\n\n# rescale color and/or opacity maps used to include current data range\nmeshvtkDisplay.RescaleTransferFunctionToDataRange(True)\n\n# show color bar/color legend\nmeshvtkDisplay.SetScalarBarVisibility(renderView1, True)\n\n# get color transfer function/color map for 'Marker'\nmarkerLUT = GetColorTransferFunction('Marker')\nmarkerLUT.RGBPoints = [0.0, 0.231373, 0.298039, 0.752941, 1.0, 0.865003, 0.865003, 0.865003, 2.0, 0.705882, 0.0156863, 0.14902]\nmarkerLUT.ScalarRangeInitialized = 1.0\n\n# get opacity transfer function/opacity map for 'Marker'\nmarkerPWF = GetOpacityTransferFunction('Marker')\nmarkerPWF.Points = [0.0, 0.0, 0.5, 0.0, 2.0, 1.0, 0.5, 0.0]\nmarkerPWF.ScalarRangeInitialized = 1\n\n# change representation type\nmeshvtkDisplay.SetRepresentationType('Surface With Edges')\n\n# create a new 'Threshold'\nthreshold1 = Threshold(Input=meshvtk)\nthreshold1.Scalars = ['POINTS', 'valuesC']\nthreshold1.ThresholdRange = [-0.010476154753522706, 0.035845241002022715]\n\n# set active source\nSetActiveSource(meshvtk)\n\n# set active source\nSetActiveSource(threshold1)\n\n# Properties modified on threshold1\nthreshold1.Scalars = ['CELLS', '_Marker']\nthreshold1.ThresholdRange = [1.1, 1.1]\n\n# show data in view\nthreshold1Display = Show(threshold1, renderView1)\n# trace defaults for the display properties.\nthreshold1Display.ColorArrayName = [None, '']\nthreshold1Display.GlyphType = 'Arrow'\n\n# hide data in view\nHide(meshvtk, renderView1)\n\n# Properties modified on threshold1\nthreshold1.ThresholdRange = [0.0, 1.36]\n\n# set active source\nSetActiveSource(None)\n\n# create a new 'Legacy VTK Reader'\nmeshvtk_1 = LegacyVTKReader(FileNames=\\\n            ['figs/3d_mesh.vtk'])\n\n# show data in view\nmeshvtk_1Display = Show(meshvtk_1, renderView1)\n# trace defaults for the display properties.\nmeshvtk_1Display.ColorArrayName = ['POINTS', 'valuesC']\nmeshvtk_1Display.LookupTable = valuesCLUT\nmeshvtk_1Display.GlyphType = 'Arrow'\nmeshvtk_1Display.ScalarOpacityUnitDistance = 36.430215288341394\n\n# show color bar/color legend\nmeshvtk_1Display.SetScalarBarVisibility(renderView1, True)\n\n# set active source\nSetActiveSource(threshold1)\n\n# set active source\nSetActiveSource(meshvtk_1)\n\n# create a new 'Threshold'\nthreshold2 = Threshold(Input=meshvtk_1)\nthreshold2.Scalars = ['POINTS', 'valuesC']\nthreshold2.ThresholdRange = [-0.010476154753522706, 0.035845241002022715]\n\n# Properties modified on threshold2\nthreshold2.Scalars = ['CELLS', '_Marker']\n\n# show data in view\nthreshold2Display = Show(threshold2, renderView1)\n# trace defaults for the display properties.\nthreshold2Display.ColorArrayName = ['POINTS', 'valuesC']\nthreshold2Display.LookupTable = valuesCLUT\nthreshold2Display.GlyphType = 'Arrow'\nthreshold2Display.ScalarOpacityUnitDistance = 23.28464850717793\n\n# hide data in view\nHide(meshvtk_1, renderView1)\n\n# show color bar/color legend\nthreshold2Display.SetScalarBarVisibility(renderView1, True)\n\n# Properties modified on threshold2\nthreshold2.ThresholdRange = [0.9, 2.0]\n\n# hide data in view\nHide(threshold1, renderView1)\n\n# set active source\nSetActiveSource(threshold1)\n\n# show data in view\nthreshold1Display = Show(threshold1, renderView1)\n\n# set active source\nSetActiveSource(meshvtk_1)\n\n# set scalar coloring\nColorBy(meshvtk_1Display, ('CELLS', '_Marker'))\n\n# rescale color and/or opacity maps used to include current data range\nmeshvtk_1Display.RescaleTransferFunctionToDataRange(True)\n\n# set active source\nSetActiveSource(threshold2)\n\n# set scalar coloring\nColorBy(threshold2Display, ('CELLS', '_Marker'))\n\n# rescale color and/or opacity maps used to include current data range\nthreshold2Display.RescaleTransferFunctionToDataRange(True)\n\n# show color bar/color legend\nthreshold2Display.SetScalarBarVisibility(renderView1, True)\n\n# set active source\nSetActiveSource(threshold1)\n\n# change representation type\nthreshold1Display.SetRepresentationType('Surface With Edges')\n\n# create a new 'Clip'\nclip1 = Clip(Input=threshold1)\nclip1.ClipType = 'Plane'\nclip1.Scalars = ['POINTS', 'valuesC']\nclip1.Value = 0.012684543124250006\n\n# init the 'Plane' selected for 'ClipType'\nclip1.ClipType.Origin = [0.0, 0.0, 150.0]\n\n# set active source\nSetActiveSource(threshold1)\n\n# destroy clip1\nDelete(clip1)\ndel clip1\n\n# set active source\nSetActiveSource(threshold2)\n\n# create a new 'Clip'\nclip1 = Clip(Input=threshold2)\nclip1.ClipType = 'Plane'\nclip1.Scalars = ['POINTS', 'valuesC']\nclip1.Value = 0.012684543124250006\n\n# init the 'Plane' selected for 'ClipType'\nclip1.ClipType.Origin = [0.0, 0.0, 150.0]\n\n# show data in view\nclip1Display = Show(clip1, renderView1)\n# trace defaults for the display properties.\nclip1Display.ColorArrayName = ['POINTS', 'valuesC']\nclip1Display.LookupTable = valuesCLUT\nclip1Display.GlyphType = 'Arrow'\nclip1Display.ScalarOpacityUnitDistance = 54.86139176364374\n\n# hide data in view\nHide(threshold2, renderView1)\n\n# show color bar/color legend\nclip1Display.SetScalarBarVisibility(renderView1, True)\n\n# Properties modified on clip1\nclip1.InsideOut = 1\n\n# reset view to fit data\nrenderView1.ResetCamera()\n\n# set active source\nSetActiveSource(None)\n\n# Properties modified on renderView1\nrenderView1.Background = [1.0, 1.0, 1.0]\n\n# set active source\nSetActiveSource(clip1)\n\n# set active source\nSetActiveSource(meshvtk)\n\n# Properties modified on meshvtkDisplay\nmeshvtkDisplay.Opacity = 0.85\n\n# Properties modified on meshvtkDisplay\nmeshvtkDisplay.EdgeColor = [0.3333333333333333, 0.6666666666666666, 1.0]\n\n# set active source\nSetActiveSource(threshold1)\n\n# Properties modified on threshold1Display\nthreshold1Display.EdgeColor = [0.13725490196078433, 0.13725490196078433, 0.13725490196078433]\n\n# set active source\nSetActiveSource(meshvtk)\n\n# create a new 'Outline'\noutline1 = Outline()\n\n# show data in view\noutline1Display = Show(outline1, renderView1)\n# trace defaults for the display properties.\noutline1Display.ColorArrayName = [None, '']\noutline1Display.GlyphType = 'Arrow'\n\n# Properties modified on outline1Display\noutline1Display.SpecularColor = [0.0, 0.0, 0.0]\n\n# set active source\nSetActiveSource(threshold1)\n\n# set active source\nSetActiveSource(clip1)\n\n# change representation type\nclip1Display.SetRepresentationType('Surface With Edges')\n\n# turn off scalar coloring\nColorBy(clip1Display, None)\n\n# Properties modified on clip1Display.GlyphType\nclip1Display.GlyphType.TipRadius = 0.0\n\n# Properties modified on clip1Display.GlyphType\nclip1Display.GlyphType.TipLength = 0.4\n\n# Properties modified on renderView1\nrenderView1.UseGradientBackground = 1\n\n# Properties modified on renderView1\nrenderView1.UseGradientBackground = 0\n\n# Properties modified on renderView1\nrenderView1.LightSwitch = 0\n\n# Properties modified on clip1Display.GlyphType\nclip1Display.GlyphType.TipLength = 0.17\n\n# Properties modified on renderView1\nrenderView1.UseGradientBackground = 0\nrenderView1.UseTexturedBackground = 1\n\n# Properties modified on renderView1\nrenderView1.UseTexturedBackground = 0\n\n# Properties modified on renderView1\nrenderView1.CameraParallelProjection = 0\n\n# Properties modified on clip1Display\nclip1Display.EdgeColor = [0.1568627450980392, 0.1568627450980392, 0.1568627450980392]\n\n# Properties modified on clip1Display\nclip1Display.SpecularColor = [1.0, 0.3333333333333333, 1.0]\n\n# set active source\nSetActiveSource(threshold2)\n\n# set active source\nSetActiveSource(clip1)\n\n# change solid color\nclip1Display.DiffuseColor = [0.9568627450980393, 0.9568627450980393, 0.9568627450980393]\n\n# set active source\nSetActiveSource(threshold1)\n\n# Properties modified on threshold1Display\nthreshold1Display.Interpolation = 'Flat'\n\n# change solid color\nthreshold1Display.DiffuseColor = [0.7843137254901961, 0.7843137254901961, 0.7843137254901961]\n\n# set active source\nSetActiveSource(clip1)\n\n# change solid color\nclip1Display.DiffuseColor = [1.0, 1.0, 1.0]\n\n# set active source\nSetActiveSource(outline1)\n\n# Properties modified on outline1Display\noutline1Display.CubeAxesVisibility = 1\n\n# Properties modified on outline1Display\noutline1Display.CubeAxesVisibility = 0\n\n# change solid color\noutline1Display.DiffuseColor = [0.0, 0.0, 0.0]\n\n# Properties modified on outline1Display\noutline1Display.BackfaceAmbientColor = [0.0, 0.0, 0.0]\n\n# Properties modified on outline1Display\noutline1Display.BackfaceDiffuseColor = [0.0, 0.0, 0.0]\n\n# Properties modified on outline1Display\noutline1Display.BackfaceOpacity = 1.0\n\n# Properties modified on outline1Display\noutline1Display.BackfaceRepresentation = 'Points'\n\n# Properties modified on outline1Display\noutline1Display.CubeAxesVisibility = 0\n\n# Properties modified on renderView1\nrenderView1.Background = [1.0, 1.0, 1.0]\n\n# set active source\nSetActiveSource(threshold1)\n\n# change solid color\nthreshold1Display.DiffuseColor = [1.0, 1.0, 0.0]\n\n# hide data in view\nHide(clip1, renderView1)\n\n# set active source\nSetActiveSource(clip1)\n\n# show data in view\nclip1Display = Show(clip1, renderView1)\n\n# hide data in view\nHide(outline1, renderView1)\n\n# set active source\nSetActiveSource(outline1)\n\n# show data in view\noutline1Display = Show(outline1, renderView1)\n\n# hide data in view\nHide(outline1, renderView1)\n\n# show data in view\noutline1Display = Show(outline1, renderView1)\n\n# Properties modified on renderView1\nrenderView1.Background = [0.3333333333333333, 0.6666666666666666, 0.0]\n\n# set active source\nSetActiveSource(threshold1)\n\n# change solid color\nthreshold1Display.DiffuseColor = [0.0, 1.0, 0.0]\n\n# Properties modified on renderView1\nrenderView1.Background = [1.0, 1.0, 1.0]\n\n# Properties modified on renderView1\nrenderView1.OrientationAxesVisibility = 0\n\n# change solid color\nthreshold1Display.DiffuseColor = [1.0, 1.0, 0.0]\n\n# set active source\nSetActiveSource(clip1)\n\n# Properties modified on clip1.ClipType\nclip1.ClipType.Origin = [60.0, 0.0, 150.0]\n\n# set active source\nSetActiveSource(outline1)\n\n# Properties modified on outline1Display\noutline1Display.CubeAxesVisibility = 1\n\n# Properties modified on outline1Display\noutline1Display.Opacity = 0.9\n\n# Properties modified on outline1Display\noutline1Display.CubeAxesVisibility = 0\n\nRender()\ncam = GetActiveCamera()\ncam.Elevation(15)\ncam.Azimuth(20.0)\nRender()\n\n# save screenshot\nSaveScreenshot('figs/3d_geom_raw.png', magnification=1, quality=100, view=renderView1)")

get_ipython().system('paraview --script=figs/paraview_view.py')

cropString = '400x600+0x60'
get_ipython().system('convert -crop {cropString} figs/3d_geom_raw.png figs/3d_geom_raw_trunc.png')
#!rm figs/3d_geom_raw_trunc.png
from IPython.display import Image
Image(filename='figs/3d_geom_raw_trunc.png') 

get_ipython().run_cell_magic('file', 'figs/paraview_view_appendix.py', "\n# find source\nthreshold1 = FindSource('Threshold1')\n\n# set active source\nSetActiveSource(threshold1)\n\n# get active view\nrenderView1 = GetActiveViewOrCreate('RenderView')\n# uncomment following to set a specific view size\n# renderView1.ViewSize = [660, 497]\n\n# get display properties\nthreshold1Display = GetDisplayProperties(threshold1, view=renderView1)\n\n# set scalar coloring\nColorBy(threshold1Display, ('POINTS', 'valuesC'))\n\n# rescale color and/or opacity maps used to include current data range\nthreshold1Display.RescaleTransferFunctionToDataRange(True)\n\n# show color bar/color legend\nthreshold1Display.SetScalarBarVisibility(renderView1, True)\n\n# get color transfer function/color map for 'valuesC'\nvaluesCLUT = GetColorTransferFunction('valuesC')\nvaluesCLUT.RGBPoints = [-0.010476155927503138, 0.231373, 0.298039, 0.752941, 0.012684562177662569, 0.865003, 0.865003, 0.865003, 0.035845280282828275, 0.705882, 0.0156863, 0.14902]\nvaluesCLUT.ScalarRangeInitialized = 1.0\n\n# get opacity transfer function/opacity map for 'valuesC'\nvaluesCPWF = GetOpacityTransferFunction('valuesC')\nvaluesCPWF.Points = [-0.010476155927503138, 0.0, 0.5, 0.0, 0.035845280282828275, 1.0, 0.5, 0.0]\nvaluesCPWF.ScalarRangeInitialized = 1\n\n# change representation type\nthreshold1Display.SetRepresentationType('Surface')\n\n# find source\nthreshold2 = FindSource('Threshold2')\n\n# set active source\nSetActiveSource(threshold2)\n\n# get color transfer function/color map for 'Marker'\nmarkerLUT = GetColorTransferFunction('Marker')\nmarkerLUT.RGBPoints = [0.0, 0.231373, 0.298039, 0.752941, 1.0, 0.865003, 0.865003, 0.865003, 2.0, 0.705882, 0.0156863, 0.14902]\nmarkerLUT.ScalarRangeInitialized = 1.0\n\n# get opacity transfer function/opacity map for 'Marker'\nmarkerPWF = GetOpacityTransferFunction('Marker')\nmarkerPWF.Points = [0.0, 0.0, 0.5, 0.0, 2.0, 1.0, 0.5, 0.0]\nmarkerPWF.ScalarRangeInitialized = 1\n\n# find source\nclip1 = FindSource('Clip1')\n\n# set active source\nSetActiveSource(clip1)\n\n# get display properties\nclip1Display = GetDisplayProperties(clip1, view=renderView1)\n\n# change representation type\nclip1Display.SetRepresentationType('Surface')\n\n# set scalar coloring\nColorBy(clip1Display, ('POINTS', 'valuesC'))\n\n# rescale color and/or opacity maps used to include current data range\nclip1Display.RescaleTransferFunctionToDataRange(True)\n\n# show color bar/color legend\nclip1Display.SetScalarBarVisibility(renderView1, True)\n\n# Rescale transfer function\nvaluesCLUT.RescaleTransferFunction(-0.000003, 0.000003)\n\n# Properties modified on valuesCLUT\nvaluesCLUT.NumberOfTableValues = 252\n\n# Properties modified on valuesCLUT\nvaluesCLUT.NumberOfTableValues = 126\n\n# Properties modified on valuesCLUT\nvaluesCLUT.NumberOfTableValues = 107\n\n# Properties modified on valuesCLUT\nvaluesCLUT.NumberOfTableValues = 98\n\n# Properties modified on valuesCLUT\nvaluesCLUT.NumberOfTableValues = 88\n\n# Properties modified on valuesCLUT\nvaluesCLUT.NumberOfTableValues = 24\n\n# toggle 3D widget visibility (only when running from the GUI)\nHide3DWidgets(proxy=clip1)\n\n###########################\n\n\n# get active view\nrenderView1 = GetActiveViewOrCreate('RenderView')\n# uncomment following to set a specific view size\n# renderView1.ViewSize = [660, 497]\n\n# get color legend/bar for valuesCLUT in view renderView1\nvaluesCLUTColorBar = GetScalarBar(valuesCLUT, renderView1)\nvaluesCLUTColorBar.ComponentTitle = ''\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.TitleColor = [0.0, 0.0, 0.0]\nvaluesCLUTColorBar.LabelColor = [0.0, 0.0, 0.0]\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.AutomaticLabelFormat = 0\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.Title = 'E (V)'\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.LabelFormat = '%-#6.1g'\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.NumberOfLabels = 3\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.AutomaticAnnotations = 0\nvaluesCLUTColorBar.AspectRatio = 15.0\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.TitleFontFamily = 'Times'\nvaluesCLUTColorBar.LabelFontFamily = 'Times'\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.TitleBold = 1\nvaluesCLUTColorBar.TitleFontSize = 12\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.TitleFontSize = 10\nvaluesCLUTColorBar.LabelFontSize = 9\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.LabelFormat = '%-#2.1e'\n\n# Properties modified on valuesCLUTColorBar\nvaluesCLUTColorBar.RangeLabelFormat = '%4.1e'\n\n\n# save screenshot\nSaveScreenshot('figs/3d_output_field.png', magnification=1, quality=100, view=renderView1)")

get_ipython().system('cat figs/paraview_view.py figs/paraview_view_appendix.py > figs/paraview_view2.py')
get_ipython().system('paraview --script=figs/paraview_view2.py')

cropString = '550x600+100x60'
get_ipython().system('convert -crop {cropString} figs/3d_output_field.png figs/3d_output_field_trunc.png')
#!rm figs/3d_output_field_trunc.png
Image(filename='figs/3d_output_field_trunc.png') 

